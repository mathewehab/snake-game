Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    main.o(.text.vUserInputTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.vUserInputTask) refers to main.o(.bss.xBinarySemaphore) for xBinarySemaphore
    main.o(.text.vUserInputTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vUserInputTask) refers to bsp.o(.text.uart0_Receivechar) for uart0_Receivechar
    main.o(.text.vUserInputTask) refers to game.o(.text.input) for input
    main.o(.text.vUserInputTask) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    main.o(.ARM.exidx.text.vUserInputTask) refers to main.o(.text.vUserInputTask) for [Anonymous Symbol]
    main.o(.text.vGameTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.vGameTask) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.vGameTask) refers to uart.o(.text.print) for print
    main.o(.text.vGameTask) refers to game.o(.bss.start) for start
    main.o(.text.vGameTask) refers to game.o(.bss.gameOver) for gameOver
    main.o(.text.vGameTask) refers to game.o(.text.logic) for logic
    main.o(.text.vGameTask) refers to game.o(.text.map_draw) for map_draw
    main.o(.text.vGameTask) refers to game.o(.data.Level) for Level
    main.o(.text.vGameTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.vGameTask) refers to game.o(.text.mainloop) for mainloop
    main.o(.text.vGameTask) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.ARM.exidx.text.vGameTask) refers to main.o(.text.vGameTask) for [Anonymous Symbol]
    main.o(.text.UART0_Handler) refers to main.o(.bss.xBinarySemaphore) for xBinarySemaphore
    main.o(.text.UART0_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.ARM.exidx.text.UART0_Handler) refers to main.o(.text.UART0_Handler) for [Anonymous Symbol]
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xBinarySemaphore) for xBinarySemaphore
    main.o(.text.main) refers to bsp.o(.text.PORTF_init) for PORTF_init
    main.o(.text.main) refers to bsp.o(.text.PORTA_init) for PORTA_init
    main.o(.text.main) refers to bsp.o(.text.UART_init) for UART_init
    main.o(.text.main) refers to main.o(.text.vUserInputTask) for vUserInputTask
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str.4
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.vGameTask) for vGameTask
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    bsp.o(.text.UART_init) refers to bsp.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    bsp.o(.text.UART_init) refers to bsp.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    bsp.o(.ARM.exidx.text.UART_init) refers to bsp.o(.text.UART_init) for [Anonymous Symbol]
    bsp.o(.ARM.exidx.text.__NVIC_SetPriority) refers to bsp.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    bsp.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to bsp.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    bsp.o(.ARM.exidx.text.uart0_putchar) refers to bsp.o(.text.uart0_putchar) for [Anonymous Symbol]
    bsp.o(.ARM.exidx.text.uart0_Receivechar) refers to bsp.o(.text.uart0_Receivechar) for [Anonymous Symbol]
    bsp.o(.ARM.exidx.text.PORTA_init) refers to bsp.o(.text.PORTA_init) for [Anonymous Symbol]
    bsp.o(.ARM.exidx.text.PORTF_init) refers to bsp.o(.text.PORTF_init) for [Anonymous Symbol]
    uart.o(.text.print_all) refers to uart.o(.rodata.str1.1) for .L.str
    uart.o(.text.print_all) refers to uart.o(.text.print) for print
    uart.o(.text.print_all) refers to uart.o(.text.print_idec) for print_idec
    uart.o(.text.print_all) refers to uart.o(.text.print_ihex) for print_ihex
    uart.o(.text.print_all) refers to uart.o(.text.print_ibin) for print_ibin
    uart.o(.ARM.exidx.text.print_all) refers to uart.o(.text.print_all) for [Anonymous Symbol]
    uart.o(.text.print) refers to strlen.o(.text) for strlen
    uart.o(.text.print) refers to bsp.o(.text.uart0_putchar) for uart0_putchar
    uart.o(.ARM.exidx.text.print) refers to uart.o(.text.print) for [Anonymous Symbol]
    uart.o(.text.print_idec) refers to uart.o(.rodata.str1.1) for .L.str.5
    uart.o(.text.print_idec) refers to uart.o(.text.print) for print
    uart.o(.text.print_idec) refers to bsp.o(.text.uart0_putchar) for uart0_putchar
    uart.o(.text.print_idec) refers to uart.o(.text.my_itoa) for my_itoa
    uart.o(.text.print_idec) refers to dflt_clz.o(x$fpl$dfltu) for __aeabi_ui2d
    uart.o(.text.print_idec) refers to log10.o(i.__hardfp_log10) for __hardfp_log10
    uart.o(.text.print_idec) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    uart.o(.text.print_idec) refers to dfix.o(x$fpl$dfix) for __aeabi_d2iz
    uart.o(.text.print_idec) refers to dflt_clz.o(x$fpl$dflt) for __aeabi_i2d
    uart.o(.ARM.exidx.text.print_idec) refers to uart.o(.text.print_idec) for [Anonymous Symbol]
    uart.o(.text.print_ihex) refers to uart.o(.rodata.str1.1) for .L.str.7
    uart.o(.text.print_ihex) refers to uart.o(.text.print) for print
    uart.o(.text.print_ihex) refers to bsp.o(.text.uart0_putchar) for uart0_putchar
    uart.o(.ARM.exidx.text.print_ihex) refers to uart.o(.text.print_ihex) for [Anonymous Symbol]
    uart.o(.text.print_ibin) refers to uart.o(.rodata.str1.1) for .L.str.8
    uart.o(.text.print_ibin) refers to uart.o(.text.print) for print
    uart.o(.text.print_ibin) refers to bsp.o(.text.uart0_putchar) for uart0_putchar
    uart.o(.ARM.exidx.text.print_ibin) refers to uart.o(.text.print_ibin) for [Anonymous Symbol]
    uart.o(.text.my_itoa) refers to uart.o(.rodata.str1.1) for .L.str.4
    uart.o(.text.my_itoa) refers to uart.o(.bss.my_itoa.buf) for my_itoa.buf
    uart.o(.ARM.exidx.text.my_itoa) refers to uart.o(.text.my_itoa) for [Anonymous Symbol]
    game.o(.text.newRecord) refers to game.o(.bss.score) for score
    game.o(.text.newRecord) refers to game.o(.bss.record) for record
    game.o(.text.newRecord) refers to game.o(.rodata.str1.1) for .L.str
    game.o(.text.newRecord) refers to uart.o(.text.print) for print
    game.o(.text.newRecord) refers to uart.o(.text.print_idec) for print_idec
    game.o(.ARM.exidx.text.newRecord) refers to game.o(.text.newRecord) for [Anonymous Symbol]
    game.o(.text.setUp) refers to rand.o(.emb_text) for rand
    game.o(.text.setUp) refers to game.o(.bss.x_HeadPosition) for x_HeadPosition
    game.o(.text.setUp) refers to game.o(.bss.y_HeadPosition) for y_HeadPosition
    game.o(.text.setUp) refers to game.o(.bss.incX) for incX
    game.o(.text.setUp) refers to game.o(.bss.incY) for incY
    game.o(.text.setUp) refers to game.o(.bss.comX) for comX
    game.o(.text.setUp) refers to game.o(.bss.comY) for comY
    game.o(.text.setUp) refers to game.o(.bss.score) for score
    game.o(.text.setUp) refers to game.o(.data.Level) for Level
    game.o(.text.setUp) refers to game.o(.bss.tailLength) for tailLength
    game.o(.text.setUp) refers to game.o(.bss.wallCollision) for wallCollision
    game.o(.ARM.exidx.text.setUp) refers to game.o(.text.setUp) for [Anonymous Symbol]
    game.o(.text.map_draw) refers to game.o(.rodata.str1.1) for .L.str.3
    game.o(.text.map_draw) refers to uart.o(.text.print) for print
    game.o(.text.map_draw) refers to game.o(.bss.x_HeadPosition) for x_HeadPosition
    game.o(.text.map_draw) refers to game.o(.bss.y_HeadPosition) for y_HeadPosition
    game.o(.text.map_draw) refers to game.o(.bss.comX) for comX
    game.o(.text.map_draw) refers to game.o(.bss.comY) for comY
    game.o(.text.map_draw) refers to game.o(.bss.tailLength) for tailLength
    game.o(.text.map_draw) refers to game.o(.bss.tailX) for tailX
    game.o(.text.map_draw) refers to game.o(.bss.tailY) for tailY
    game.o(.text.map_draw) refers to game.o(.bss.score) for score
    game.o(.text.map_draw) refers to uart.o(.text.print_idec) for print_idec
    game.o(.text.map_draw) refers to game.o(.bss.record) for record
    game.o(.text.map_draw) refers to game.o(.data.Level) for Level
    game.o(.ARM.exidx.text.map_draw) refers to game.o(.text.map_draw) for [Anonymous Symbol]
    game.o(.text.input) refers to game.o(.bss.incX) for incX
    game.o(.text.input) refers to game.o(.bss.incY) for incY
    game.o(.text.input) refers to game.o(.bss.gameOver) for gameOver
    game.o(.text.input) refers to game.o(.bss.start) for start
    game.o(.text.input) refers to game.o(.text.setUp) for setUp
    game.o(.text.input) refers to game.o(.bss.LevelUpCheck) for LevelUpCheck
    game.o(.text.input) refers to game.o(.bss.score) for score
    game.o(.text.input) refers to game.o(.bss.record) for record
    game.o(.text.input) refers to game.o(.text.newRecord) for newRecord
    game.o(.text.input) refers to game.o(.bss.prevScore) for prevScore
    game.o(.text.input) refers to game.o(.bss.cont) for cont
    game.o(.text.input) refers to game.o(.data.Level) for Level
    game.o(.ARM.exidx.text.input) refers to game.o(.text.input) for [Anonymous Symbol]
    game.o(.text.logic) refers to game.o(.bss.x_HeadPosition) for x_HeadPosition
    game.o(.text.logic) refers to game.o(.bss.y_HeadPosition) for y_HeadPosition
    game.o(.text.logic) refers to game.o(.bss.tailLength) for tailLength
    game.o(.text.logic) refers to game.o(.bss.tailX) for tailX
    game.o(.text.logic) refers to game.o(.bss.tailY) for tailY
    game.o(.text.logic) refers to game.o(.bss.incX) for incX
    game.o(.text.logic) refers to game.o(.bss.incY) for incY
    game.o(.text.logic) refers to game.o(.bss.wallCollision) for wallCollision
    game.o(.text.logic) refers to game.o(.bss.gameOver) for gameOver
    game.o(.text.logic) refers to game.o(.bss.lost) for lost
    game.o(.text.logic) refers to game.o(.bss.comX) for comX
    game.o(.text.logic) refers to game.o(.bss.comY) for comY
    game.o(.text.logic) refers to game.o(.bss.score) for score
    game.o(.text.logic) refers to rand.o(.emb_text) for rand
    game.o(.text.logic) refers to game.o(.bss.prevScore) for prevScore
    game.o(.text.logic) refers to game.o(.data.Level) for Level
    game.o(.ARM.exidx.text.logic) refers to game.o(.text.logic) for [Anonymous Symbol]
    game.o(.text.mainloop) refers to game.o(.bss.lost) for lost
    game.o(.text.mainloop) refers to game.o(.bss.score) for score
    game.o(.text.mainloop) refers to game.o(.bss.record) for record
    game.o(.text.mainloop) refers to game.o(.text.newRecord) for newRecord
    game.o(.text.mainloop) refers to game.o(.rodata.str1.1) for .L.str.13
    game.o(.text.mainloop) refers to uart.o(.text.print) for print
    game.o(.text.mainloop) refers to uart.o(.text.print_idec) for print_idec
    game.o(.text.mainloop) refers to game.o(.data.Level) for Level
    game.o(.text.mainloop) refers to game.o(.bss.prevScore) for prevScore
    game.o(.text.mainloop) refers to game.o(.bss.LevelUpCheck) for LevelUpCheck
    game.o(.text.mainloop) refers to game.o(.bss.cont) for cont
    game.o(.ARM.exidx.text.mainloop) refers to game.o(.text.mainloop) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.UART0_Handler) for UART0_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.pvPortMalloc.pucAlignedHeap) for pvPortMalloc.pucAlignedHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.ucHeap) for ucHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(.ARM.exidx.text.pvPortMalloc) refers to heap_1.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_1.o(.ARM.exidx.text.vPortFree) refers to heap_1.o(.text.vPortFree) for [Anonymous Symbol]
    heap_1.o(.text.vPortInitialiseBlocks) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_1.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_1.o(.text.xPortGetFreeHeapSize) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_1.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to aeabi_memset.o(.text) for __aeabi_memset
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to rt_memclr.o(.text) for __aeabi_memclr
    stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadBytesFromBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteBytesToBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_1.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    rand.o(.emb_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_rand_2
    rand.o(.emb_text) refers to rand.o(.text) for _rand_init
    rand.o(.emb_text) refers to rand.o(.bss) for _random_number_data
    rand.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_rand_2
    rand.o(.text) refers to rand.o(.bss) for .bss
    rand.o(.bss) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_rand_2
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    daddsub_clz.o(x$fpl$dadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$dadd) refers to daddsub_clz.o(x$fpl$dsub) for _dsub1
    daddsub_clz.o(x$fpl$dadd) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    daddsub_clz.o(x$fpl$dadd) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    daddsub_clz.o(x$fpl$drsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$drsb) refers to daddsub_clz.o(x$fpl$dadd) for _dadd1
    daddsub_clz.o(x$fpl$drsb) refers to daddsub_clz.o(x$fpl$dsub) for _dsub1
    daddsub_clz.o(x$fpl$dsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$dsub) refers to daddsub_clz.o(x$fpl$dadd) for _dadd1
    daddsub_clz.o(x$fpl$dsub) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfix.o(x$fpl$dfix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfix) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfix.o(x$fpl$dfixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfixr) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dflt_clz.o(x$fpl$dfltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dfltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    log10.o(i.__hardfp_log10) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    log10.o(i.__hardfp_log10) refers to dunder.o(i.__mathlib_dbl_infnan) for __mathlib_dbl_infnan
    log10.o(i.__hardfp_log10) refers to _rserrno.o(.text) for __set_errno
    log10.o(i.__hardfp_log10) refers to dunder.o(i.__mathlib_dbl_invalid) for __mathlib_dbl_invalid
    log10.o(i.__hardfp_log10) refers to dunder.o(i.__mathlib_dbl_divzero) for __mathlib_dbl_divzero
    log10.o(i.__hardfp_log10) refers to basic.o(x$fpl$basic) for __aeabi_dneg
    log10.o(i.__hardfp_log10) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    log10.o(i.__hardfp_log10) refers to dflt_clz.o(x$fpl$dflt) for __aeabi_i2d
    log10.o(i.__hardfp_log10) refers to log.o(i.log) for log
    log10.o(i.__hardfp_log10) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    log10.o(i.__softfp_log10) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    log10.o(i.__softfp_log10) refers to log10.o(i.__hardfp_log10) for __hardfp_log10
    log10.o(i.log10) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    log10.o(i.log10) refers to log10.o(i.__hardfp_log10) for __hardfp_log10
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    _rserrno.o(.text) refers to rt_errno_addr_intlibspace.o(.text) for __aeabi_errno_addr
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$0000000F) refers (Weak) to rand.o(.text) for _rand_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    basic.o(x$fpl$basic) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    dmul.o(x$fpl$dmul) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dunder.o(i.__mathlib_dbl_divzero) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_infnan) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    dunder.o(i.__mathlib_dbl_infnan2) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    dunder.o(i.__mathlib_dbl_invalid) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_overflow) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    dunder.o(i.__mathlib_dbl_posinfnan) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    dunder.o(i.__mathlib_dbl_underflow) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    log.o(i.__hardfp_log) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    log.o(i.__hardfp_log) refers to dunder.o(i.__mathlib_dbl_infnan) for __mathlib_dbl_infnan
    log.o(i.__hardfp_log) refers to _rserrno.o(.text) for __set_errno
    log.o(i.__hardfp_log) refers to dunder.o(i.__mathlib_dbl_invalid) for __mathlib_dbl_invalid
    log.o(i.__hardfp_log) refers to dunder.o(i.__mathlib_dbl_divzero) for __mathlib_dbl_divzero
    log.o(i.__hardfp_log) refers to basic.o(x$fpl$basic) for __aeabi_dneg
    log.o(i.__hardfp_log) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    log.o(i.__hardfp_log) refers to daddsub_clz.o(x$fpl$dsub) for __aeabi_dsub
    log.o(i.__hardfp_log) refers to deqf.o(x$fpl$deqf) for __aeabi_cdcmpeq
    log.o(i.__hardfp_log) refers to dflt_clz.o(x$fpl$dflt) for __aeabi_i2d
    log.o(i.__hardfp_log) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    log.o(i.__hardfp_log) refers to daddsub_clz.o(x$fpl$drsb) for __aeabi_drsub
    log.o(i.__hardfp_log) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    log.o(i.__hardfp_log) refers to poly.o(i.__kernel_poly) for __kernel_poly
    log.o(i.__hardfp_log) refers to qnan.o(.constdata) for __mathlib_zero
    log.o(i.__hardfp_log) refers to log.o(.constdata) for .constdata
    log.o(i.__softfp_log) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    log.o(i.__softfp_log) refers to log.o(i.__hardfp_log) for __hardfp_log
    log.o(i.log) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    log.o(i.log) refers to log.o(i.__hardfp_log) for __hardfp_log
    log.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    ddiv.o(x$fpl$drdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$drdiv) refers to ddiv.o(x$fpl$ddiv) for ddiv_entry
    ddiv.o(x$fpl$ddiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$ddiv) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    ddiv.o(x$fpl$ddiv) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    deqf.o(x$fpl$deqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    deqf.o(x$fpl$deqf) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    deqf.o(x$fpl$deqf) refers to dcmpi.o(x$fpl$dcmpinf) for __fpl_dcmp_Inf
    poly.o(i.__kernel_poly) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    poly.o(i.__kernel_poly) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    poly.o(i.__kernel_poly) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    qnan.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    dcmpi.o(x$fpl$dcmpinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.vUserInputTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.vGameTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.UART0_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing bsp.o(.text), (0 bytes).
    Removing bsp.o(.ARM.exidx.text.UART_init), (8 bytes).
    Removing bsp.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing bsp.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing bsp.o(.ARM.exidx.text.uart0_putchar), (8 bytes).
    Removing bsp.o(.ARM.exidx.text.uart0_Receivechar), (8 bytes).
    Removing bsp.o(.ARM.exidx.text.PORTA_init), (8 bytes).
    Removing bsp.o(.ARM.exidx.text.PORTF_init), (8 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.text.print_all), (88 bytes).
    Removing uart.o(.ARM.exidx.text.print_all), (8 bytes).
    Removing uart.o(.ARM.exidx.text.print), (8 bytes).
    Removing uart.o(.ARM.exidx.text.print_idec), (8 bytes).
    Removing uart.o(.text.print_ihex), (160 bytes).
    Removing uart.o(.ARM.exidx.text.print_ihex), (8 bytes).
    Removing uart.o(.text.print_ibin), (132 bytes).
    Removing uart.o(.ARM.exidx.text.print_ibin), (8 bytes).
    Removing uart.o(.ARM.exidx.text.my_itoa), (8 bytes).
    Removing game.o(.text), (0 bytes).
    Removing game.o(.ARM.exidx.text.newRecord), (8 bytes).
    Removing game.o(.ARM.exidx.text.setUp), (8 bytes).
    Removing game.o(.ARM.exidx.text.map_draw), (8 bytes).
    Removing game.o(.ARM.exidx.text.input), (8 bytes).
    Removing game.o(.ARM.exidx.text.logic), (8 bytes).
    Removing game.o(.ARM.exidx.text.mainloop), (8 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing croutine.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (360 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (282 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (442 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (66 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (100 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (122 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (36 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (16 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (46 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_1.o(.text), (0 bytes).
    Removing heap_1.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_1.o(.text.vPortInitialiseBlocks), (14 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_1.o(.text.xPortGetFreeHeapSize), (18 bytes).
    Removing heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (74 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (94 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (628 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (46 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (444 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (480 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (318 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (212 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (54 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (62 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (48 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (48 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (68 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (230 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.prvInitialiseNewStreamBuffer), (110 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (72 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (128 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (86 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (116 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (52 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.prvBytesInBuffer), (56 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (442 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (160 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (242 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (330 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (134 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (130 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.prvReadBytesFromBuffer), (234 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (228 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (72 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (92 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (134 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (134 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (12 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteBytesToBuffer), (242 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (484 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (378 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (264 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (70 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (210 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (228 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (270 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (362 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (280 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (558 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (668 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (498 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (110 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (176 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (52 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (44 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (90 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (78 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (44 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (76 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (94 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).

362 unused section(s) (total 19086 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/fenv.c                           0x00000000   Number         0  _rserrno.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/basic.s                         0x00000000   Number         0  basic.o ABSOLUTE
    ../fplib/daddsub.s                       0x00000000   Number         0  daddsub_clz.o ABSOLUTE
    ../fplib/dcmpi.s                         0x00000000   Number         0  dcmpi.o ABSOLUTE
    ../fplib/ddiv.s                          0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/deqf.s                          0x00000000   Number         0  deqf.o ABSOLUTE
    ../fplib/dfix.s                          0x00000000   Number         0  dfix.o ABSOLUTE
    ../fplib/dflt.s                          0x00000000   Number         0  dflt_clz.o ABSOLUTE
    ../fplib/dmul.s                          0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/dunder.c                      0x00000000   Number         0  dunder.o ABSOLUTE
    ../mathlib/log.c                         0x00000000   Number         0  log.o ABSOLUTE
    ../mathlib/log10.c                       0x00000000   Number         0  log10.o ABSOLUTE
    ../mathlib/poly.c                        0x00000000   Number         0  poly.o ABSOLUTE
    ../mathlib/qnan.c                        0x00000000   Number         0  qnan.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    UART.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    bsp.c                                    0x00000000   Number         0  bsp.o ABSOLUTE
    croutine.c                               0x00000000   Number         0  croutine.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    game.c                                   0x00000000   Number         0  game.o ABSOLUTE
    heap_1.c                                 0x00000000   Number         0  heap_1.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002a8   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x000002c4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000002e0   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x000002e2   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$0000000F          0x000002e6   Section        4  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000010          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x000002ea   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x000002ea   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x000002ec   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000002ee   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000002ee   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x000002ee   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x000002ee   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x000002ee   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x000002ee   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x000002ee   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000002f0   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000002f0   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000002f0   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000002f6   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000002f6   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000002fa   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000002fa   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000302   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000304   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000304   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000308   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x00000310   Section       52  rand.o(.emb_text)
    $v0                                      0x00000344   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000344   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000458   Section        0  rand.o(.text)
    .text                                    0x00000494   Section        0  strlen.o(.text)
    .text                                    0x000004d2   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0000055c   Section       16  aeabi_memset4.o(.text)
    .text                                    0x0000056c   Section       68  rt_memclr.o(.text)
    .text                                    0x000005b0   Section       78  rt_memclr_w.o(.text)
    .text                                    0x000005fe   Section        0  heapauxi.o(.text)
    .text                                    0x00000604   Section        0  _rserrno.o(.text)
    .text                                    0x0000061a   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00000680   Section        8  rt_errno_addr_intlibspace.o(.text)
    .text                                    0x00000688   Section        8  libspace.o(.text)
    .text                                    0x00000690   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x000006da   Section        0  exit.o(.text)
    .text                                    0x000006ec   Section        2  use_no_semi.o(.text)
    .text                                    0x000006ee   Section        0  indicate_semi.o(.text)
    .text                                    0x000006f0   Section        0  sys_exit.o(.text)
    [Anonymous Symbol]                       0x000006fc   Section        0  bsp.o(.text.PORTA_init)
    [Anonymous Symbol]                       0x0000074c   Section        0  bsp.o(.text.PORTF_init)
    [Anonymous Symbol]                       0x000007a0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00000800   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000810   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000830   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000834   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000870   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000884   Section        0  main.o(.text.UART0_Handler)
    [Anonymous Symbol]                       0x000008d4   Section        0  bsp.o(.text.UART_init)
    __NVIC_EnableIRQ                         0x00000975   Thumb Code    48  bsp.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00000974   Section        0  bsp.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x000009a5   Thumb Code    66  bsp.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x000009a4   Section        0  bsp.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x000009e8   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x00000a68   Section        0  game.o(.text.input)
    [Anonymous Symbol]                       0x00000c00   Section        0  game.o(.text.logic)
    [Anonymous Symbol]                       0x00000f14   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00000f90   Section        0  game.o(.text.mainloop)
    [Anonymous Symbol]                       0x00001140   Section        0  game.o(.text.map_draw)
    [Anonymous Symbol]                       0x00001340   Section        0  uart.o(.text.my_itoa)
    [Anonymous Symbol]                       0x000013b4   Section        0  game.o(.text.newRecord)
    [Anonymous Symbol]                       0x00001408   Section        0  uart.o(.text.print)
    [Anonymous Symbol]                       0x00001458   Section        0  uart.o(.text.print_idec)
    prvAddCurrentTaskToDelayedList           0x00001559   Thumb Code   290  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00001558   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x0000167d   Thumb Code   340  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x0000167c   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x000017d1   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x000017d0   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x0000183d   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x0000183c   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00001899   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00001898   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x000018dd   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x000018dc   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x000019a9   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x000019a8   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x000019c1   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x000019c0   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetExpectedIdleTime                   0x000019e9   Thumb Code   124  tasks.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x000019e8   Section        0  tasks.o(.text.prvGetExpectedIdleTime)
    prvGetNextExpireTime                     0x00001a65   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x00001a64   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvIdleTask                              0x00001aa5   Thumb Code   154  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00001aa4   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x00001b41   Thumb Code    78  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x00001b40   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x00001b91   Thumb Code   292  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00001b90   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00001cb5   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00001cb4   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertTimerInActiveList               0x00001d45   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x00001d44   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x00001dcd   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x00001dcc   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvNotifyQueueSetContainer               0x00001df5   Thumb Code   236  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00001df4   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00001ee1   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00001ee0   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x00001f09   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x00001f08   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x00001f5d   Thumb Code   384  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x00001f5c   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x000020dd   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x000020dc   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x00002179   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x00002178   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x000021ad   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x000021ac   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x000021e9   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x000021e8   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x0000222d   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x0000222c   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x00002281   Thumb Code    76  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00002280   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x000022cd   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x000022cc   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x000022ed   Thumb Code   204  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x000022ec   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x000023b8   Section        0  heap_1.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00002478   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x000024a4   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00002504   Section        0  game.o(.text.setUp)
    [Anonymous Symbol]                       0x00002638   Section        0  bsp.o(.text.uart0_Receivechar)
    [Anonymous Symbol]                       0x00002668   Section        0  bsp.o(.text.uart0_putchar)
    [Anonymous Symbol]                       0x00002698   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x000026e0   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x000026ec   Section        0  main.o(.text.vGameTask)
    [Anonymous Symbol]                       0x000027d0   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00002800   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00002810   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x0000287c   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x000028b9   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000028b8   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000028cc   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00002924   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00002970   Section        0  heap_1.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00002994   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00002a0c   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x00002c2c   Section        0  port.o(.text.vPortValidateInterruptPriority)
    [Anonymous Symbol]                       0x00002cb0   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00002d14   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x00002d84   Section        0  tasks.o(.text.vTaskDelete)
    [Anonymous Symbol]                       0x00002ed8   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00002efc   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00002f0c   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00002f50   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x00002fcc   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00003150   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00003204   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x000032d0   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x000032e0   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x000032e0   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x000033a0   Section        0  main.o(.text.vUserInputTask)
    [Anonymous Symbol]                       0x000033ec   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00003568   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00003604   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x0000370c   Section        0  queue.o(.text.xQueueGiveFromISR)
    [Anonymous Symbol]                       0x00003890   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00003a6c   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x00003c7c   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00003d78   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00003e18   Section        0  tasks.o(.text.xTaskDelayUntil)
    [Anonymous Symbol]                       0x00003f30   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00003f68   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00003f7c   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x000041dc   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00004314   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00004470   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00004604   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00004828   Section        0  timers.o(.text.xTimerCreateTimerTask)
    i.__hardfp_log                           0x00004898   Section        0  log.o(i.__hardfp_log)
    i.__hardfp_log10                         0x00004c60   Section        0  log10.o(i.__hardfp_log10)
    i.__kernel_poly                          0x00004d90   Section        0  poly.o(i.__kernel_poly)
    i.__mathlib_dbl_divzero                  0x00004e88   Section        0  dunder.o(i.__mathlib_dbl_divzero)
    i.__mathlib_dbl_infnan                   0x00004eb8   Section        0  dunder.o(i.__mathlib_dbl_infnan)
    i.__mathlib_dbl_invalid                  0x00004ed0   Section        0  dunder.o(i.__mathlib_dbl_invalid)
    i.log                                    0x00004ef0   Section        0  log.o(i.log)
    $v0                                      0x00004f00   Number         0  basic.o(x$fpl$basic)
    x$fpl$basic                              0x00004f00   Section       24  basic.o(x$fpl$basic)
    $v0                                      0x00004f18   Number         0  daddsub_clz.o(x$fpl$dadd)
    x$fpl$dadd                               0x00004f18   Section      336  daddsub_clz.o(x$fpl$dadd)
    _dadd1                                   0x00004f29   Thumb Code     0  daddsub_clz.o(x$fpl$dadd)
    $v0                                      0x00005068   Number         0  dcmpi.o(x$fpl$dcmpinf)
    x$fpl$dcmpinf                            0x00005068   Section       24  dcmpi.o(x$fpl$dcmpinf)
    $v0                                      0x00005080   Number         0  ddiv.o(x$fpl$ddiv)
    x$fpl$ddiv                               0x00005080   Section      692  ddiv.o(x$fpl$ddiv)
    ddiv_entry                               0x00005087   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    $v0                                      0x00005334   Number         0  deqf.o(x$fpl$deqf)
    x$fpl$deqf                               0x00005334   Section      120  deqf.o(x$fpl$deqf)
    $v0                                      0x000053ac   Number         0  dfix.o(x$fpl$dfix)
    x$fpl$dfix                               0x000053ac   Section       94  dfix.o(x$fpl$dfix)
    $v0                                      0x0000540a   Number         0  dflt_clz.o(x$fpl$dflt)
    x$fpl$dflt                               0x0000540a   Section       46  dflt_clz.o(x$fpl$dflt)
    $v0                                      0x00005438   Number         0  dflt_clz.o(x$fpl$dfltu)
    x$fpl$dfltu                              0x00005438   Section       38  dflt_clz.o(x$fpl$dfltu)
    $v0                                      0x00005460   Number         0  dmul.o(x$fpl$dmul)
    x$fpl$dmul                               0x00005460   Section      340  dmul.o(x$fpl$dmul)
    $v0                                      0x000055b4   Number         0  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dnaninf                            0x000055b4   Section      156  dnaninf.o(x$fpl$dnaninf)
    $v0                                      0x00005650   Number         0  dretinf.o(x$fpl$dretinf)
    x$fpl$dretinf                            0x00005650   Section       12  dretinf.o(x$fpl$dretinf)
    $v0                                      0x0000565c   Number         0  daddsub_clz.o(x$fpl$drsb)
    x$fpl$drsb                               0x0000565c   Section       22  daddsub_clz.o(x$fpl$drsb)
    $v0                                      0x00005674   Number         0  daddsub_clz.o(x$fpl$dsub)
    x$fpl$dsub                               0x00005674   Section      476  daddsub_clz.o(x$fpl$dsub)
    _dsub1                                   0x00005685   Thumb Code     0  daddsub_clz.o(x$fpl$dsub)
    $v0                                      0x00005850   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00005850   Section       26  fpinit.o(x$fpl$fpinit)
    x$fpl$usenofp                            0x0000586a   Section        0  usenofp.o(x$fpl$usenofp)
    Lg2                                      0x00005870   Data          24  log.o(.constdata)
    .constdata                               0x00005870   Section       56  log.o(.constdata)
    Lg                                       0x00005888   Data          32  log.o(.constdata)
    .constdata                               0x000058a8   Section        8  qnan.o(.constdata)
    .L.str.1                                 0x000058b0   Data         135  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000058b0   Section        0  main.o(.rodata.str1.1)
    .L.str                                   0x00005937   Data          16  main.o(.rodata.str1.1)
    .L.str.3                                 0x00005947   Data          16  main.o(.rodata.str1.1)
    .L.str.2                                 0x00005957   Data          32  main.o(.rodata.str1.1)
    .L.str.4                                 0x00005974   Data           3  main.o(.rodata.str1.1)
    .L.str.5                                 0x00005977   Data          11  main.o(.rodata.str1.1)
    .L.str.4                                 0x00005982   Data          17  main.o(.rodata.str1.1)
    .L.str.8                                 0x00005991   Data           2  main.o(.rodata.str1.1)
    .L.str                                   0x00005993   Data           6  uart.o(.rodata.str1.1)
    .L.str.5                                 0x00005993   Data          14  uart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00005993   Section        0  uart.o(.rodata.str1.1)
    .L.str.1                                 0x00005999   Data           8  uart.o(.rodata.str1.1)
    .L.str.6                                 0x0000599f   Data           2  uart.o(.rodata.str1.1)
    .L.str.2                                 0x000059a1   Data           6  uart.o(.rodata.str1.1)
    .L.str.4                                 0x000059a1   Data          17  uart.o(.rodata.str1.1)
    .L.str.3                                 0x000059a7   Data           6  uart.o(.rodata.str1.1)
    .L.str.20                                0x000059b2   Data          89  game.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000059b2   Section        0  game.o(.rodata.str1.1)
    .L.str.7                                 0x000059ce   Data           3  uart.o(.rodata.str1.1)
    .L.str.8                                 0x000059d1   Data           3  uart.o(.rodata.str1.1)
    .L.str.17                                0x00005a0b   Data          63  game.o(.rodata.str1.1)
    .L.str.14                                0x00005a4a   Data          20  game.o(.rodata.str1.1)
    .L.str.13                                0x00005a5e   Data          20  game.o(.rodata.str1.1)
    .L.str.1                                 0x00005a72   Data          23  game.o(.rodata.str1.1)
    .L.str.18                                0x00005a89   Data          23  game.o(.rodata.str1.1)
    .L.str                                   0x00005aa0   Data          23  game.o(.rodata.str1.1)
    .L.str.12                                0x00005ab7   Data           2  game.o(.rodata.str1.1)
    .L.str.2                                 0x00005ab9   Data          13  game.o(.rodata.str1.1)
    .L.str.16                                0x00005abd   Data           9  game.o(.rodata.str1.1)
    .L.str.15                                0x00005ac6   Data           8  game.o(.rodata.str1.1)
    .L.str.19                                0x00005ace   Data          20  game.o(.rodata.str1.1)
    .L.str.10                                0x00005ae2   Data          10  game.o(.rodata.str1.1)
    .L.str.9                                 0x00005aec   Data          10  game.o(.rodata.str1.1)
    .L.str.11                                0x00005af6   Data           9  game.o(.rodata.str1.1)
    .L.str.3                                 0x00005aff   Data           2  game.o(.rodata.str1.1)
    .L.str.6                                 0x00005b01   Data           2  game.o(.rodata.str1.1)
    .L.str.5                                 0x00005b03   Data           2  game.o(.rodata.str1.1)
    .L.str.7                                 0x00005b05   Data           2  game.o(.rodata.str1.1)
    .L.str                                   0x00005b07   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00005b07   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x00005b0c   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00005b0c   Section        0  timers.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000008   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000008   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000010   Section      228  rand.o(.bss)
    .bss                                     0x200000f4   Section       96  libspace.o(.bss)
    my_itoa.buf                              0x20000174   Data          30  uart.o(.bss.my_itoa.buf)
    [Anonymous Symbol]                       0x20000174   Section        0  uart.o(.bss.my_itoa.buf)
    prvSampleTimeNow.xLastTime               0x20000198   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000198   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pvPortMalloc.pucAlignedHeap              0x2000019c   Data           4  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    [Anonymous Symbol]                       0x2000019c   Section        0  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    __tagsym$$used.1                         0x200001a0   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x200001a4   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x200001a4   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x200001a8   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200001a8   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x200001ac   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200001ac   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200001b0   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200001b0   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200001b4   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200001b4   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000ea0   Data       10240  heap_1.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000ea0   Section        0  heap_1.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x200036a0   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x200036a0   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x200036a4   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x200036a4   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x200036a8   Data           4  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x200036a8   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x200036ac   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x200036ac   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x200036b0   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200036b0   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x200036b4   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x200036b4   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x200036b8   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200036b8   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x200036bc   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x200036bc   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x200036c0   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x200036c0   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x200036c8   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x200036c8   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x200036dc   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x200036dc   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x200036f4   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x200036f4   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20003708   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20003708   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xIdleTaskHandle                          0x2000371c   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x2000371c   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x20003720   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x20003720   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xNextFreeByte                            0x20003724   Data           4  heap_1.o(.bss.xNextFreeByte)
    [Anonymous Symbol]                       0x20003724   Section        0  heap_1.o(.bss.xNextFreeByte)
    xNextTaskUnblockTime                     0x20003728   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20003728   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x2000372c   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x2000372c   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x20003730   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20003730   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20003734   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20003734   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20003748   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20003748   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSuspendedTaskList                       0x2000374c   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x2000374c   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20003760   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20003760   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20003774   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20003774   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20003778   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20003778   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x2000377c   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x2000377c   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20003780   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20003780   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20003790   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20003790   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20003790   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20003790   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20003990   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEX$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002a9   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x000002c5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x000002e1   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_heap_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_preinit_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_2                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_relocate_pie_1             0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_user_alloc_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_alloca_1                   0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_lc_collate_1               0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_rand_1                     0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_return                     0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x000002eb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_shutdown                        0x000002ed   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000002ef   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000002ef   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x000002ef   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x000002ef   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x000002ef   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x000002ef   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x000002ef   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000002f1   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000002f1   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000002f1   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000002fb   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000002fb   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000303   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000305   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000305   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000309   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    rand                                     0x00000311   Thumb Code    48  rand.o(.emb_text)
    Reset_Handler                            0x00000345   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x000003ff   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x00000401   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x00000403   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x00000405   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x00000407   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x00000409   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x0000040b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x0000040d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x0000040f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x00000411   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x00000413   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000415   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x00000417   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000419   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x0000041b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x0000041d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x0000041f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x00000421   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x00000423   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000425   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x00000427   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000429   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x0000042b   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x0000042d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x0000042f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000431   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x00000433   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000435   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000439   Thumb Code     0  startup_tm4c123.o(.text)
    srand                                    0x00000459   Thumb Code    42  rand.o(.text)
    _rand_init                               0x00000483   Thumb Code     4  rand.o(.text)
    strlen                                   0x00000495   Thumb Code    62  strlen.o(.text)
    __aeabi_memcpy                           0x000004d3   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x000004d3   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x00000539   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x0000055d   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x0000055d   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x0000056d   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x0000056d   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x00000571   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x000005b1   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x000005b1   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x000005b1   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x000005b5   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x000005ff   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000601   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000603   Thumb Code     2  heapauxi.o(.text)
    __read_errno                             0x00000605   Thumb Code    10  _rserrno.o(.text)
    __set_errno                              0x0000060f   Thumb Code    12  _rserrno.o(.text)
    __aeabi_memcpy4                          0x0000061b   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0000061b   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0000061b   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00000663   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_errno_addr                       0x00000681   Thumb Code     8  rt_errno_addr_intlibspace.o(.text)
    __errno$intlibspace                      0x00000681   Thumb Code     0  rt_errno_addr_intlibspace.o(.text)
    __rt_errno_addr$intlibspace              0x00000681   Thumb Code     0  rt_errno_addr_intlibspace.o(.text)
    __user_libspace                          0x00000689   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000689   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000689   Thumb Code     0  libspace.o(.text)
    __user_setup_stackheap                   0x00000691   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x000006db   Thumb Code    18  exit.o(.text)
    __I$use$semihosting                      0x000006ed   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000006ed   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x000006ef   Thumb Code     0  indicate_semi.o(.text)
    _sys_exit                                0x000006f1   Thumb Code     8  sys_exit.o(.text)
    PORTA_init                               0x000006fd   Thumb Code    80  bsp.o(.text.PORTA_init)
    PORTF_init                               0x0000074d   Thumb Code    72  bsp.o(.text.PORTF_init)
    PendSV_Handler                           0x000007a1   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00000811   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000835   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000871   Thumb Code    18  system_tm4c123.o(.text.SystemInit)
    UART0_Handler                            0x00000885   Thumb Code    78  main.o(.text.UART0_Handler)
    UART_init                                0x000008d5   Thumb Code   160  bsp.o(.text.UART_init)
    eTaskConfirmSleepModeStatus              0x000009e9   Thumb Code   128  tasks.o(.text.eTaskConfirmSleepModeStatus)
    input                                    0x00000a69   Thumb Code   406  game.o(.text.input)
    logic                                    0x00000c01   Thumb Code   788  game.o(.text.logic)
    main                                     0x00000f15   Thumb Code   124  main.o(.text.main)
    mainloop                                 0x00000f91   Thumb Code   432  game.o(.text.mainloop)
    map_draw                                 0x00001141   Thumb Code   512  game.o(.text.map_draw)
    my_itoa                                  0x00001341   Thumb Code   114  uart.o(.text.my_itoa)
    newRecord                                0x000013b5   Thumb Code    82  game.o(.text.newRecord)
    print                                    0x00001409   Thumb Code    76  uart.o(.text.print)
    print_idec                               0x00001459   Thumb Code   256  uart.o(.text.print_idec)
    pvPortMalloc                             0x000023b9   Thumb Code   192  heap_1.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00002479   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x000024a5   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    setUp                                    0x00002505   Thumb Code   306  game.o(.text.setUp)
    uart0_Receivechar                        0x00002639   Thumb Code    46  bsp.o(.text.uart0_Receivechar)
    uart0_putchar                            0x00002669   Thumb Code    46  bsp.o(.text.uart0_putchar)
    uxListRemove                             0x00002699   Thumb Code    72  list.o(.text.uxListRemove)
    uxTaskGetNumberOfTasks                   0x000026e1   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    vGameTask                                0x000026ed   Thumb Code   226  main.o(.text.vGameTask)
    vListInitialise                          0x000027d1   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00002801   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00002811   Thumb Code   106  list.o(.text.vListInsert)
    vListInsertEnd                           0x0000287d   Thumb Code    58  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x000028cd   Thumb Code    86  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00002925   Thumb Code    74  port.o(.text.vPortExitCritical)
    vPortFree                                0x00002971   Thumb Code    36  heap_1.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00002995   Thumb Code   120  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x00002a0d   Thumb Code   544  port.o(.text.vPortSuppressTicksAndSleep)
    vPortValidateInterruptPriority           0x00002c2d   Thumb Code   132  port.o(.text.vPortValidateInterruptPriority)
    vQueueWaitForMessageRestricted           0x00002cb1   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x00002d15   Thumb Code   110  tasks.o(.text.vTaskDelay)
    vTaskDelete                              0x00002d85   Thumb Code   340  tasks.o(.text.vTaskDelete)
    vTaskInternalSetTimeOutState             0x00002ed9   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00002efd   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00002f0d   Thumb Code    66  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00002f51   Thumb Code   124  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x00002fcd   Thumb Code   386  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x00003151   Thumb Code   178  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x00003205   Thumb Code   204  tasks.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x000032d1   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x000032e1   Thumb Code   190  tasks.o(.text.vTaskSwitchContext)
    vUserInputTask                           0x000033a1   Thumb Code    74  main.o(.text.vUserInputTask)
    xPortStartScheduler                      0x000033ed   Thumb Code   380  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x00003569   Thumb Code   154  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00003605   Thumb Code   264  queue.o(.text.xQueueGenericReset)
    xQueueGiveFromISR                        0x0000370d   Thumb Code   386  queue.o(.text.xQueueGiveFromISR)
    xQueueReceive                            0x00003891   Thumb Code   476  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x00003a6d   Thumb Code   528  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x00003c7d   Thumb Code   252  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00003d79   Thumb Code   160  tasks.o(.text.xTaskCreate)
    xTaskDelayUntil                          0x00003e19   Thumb Code   278  tasks.o(.text.xTaskDelayUntil)
    xTaskGetSchedulerState                   0x00003f31   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00003f69   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00003f7d   Thumb Code   608  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x000041dd   Thumb Code   312  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x00004315   Thumb Code   348  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00004471   Thumb Code   402  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00004605   Thumb Code   546  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00004829   Thumb Code   108  timers.o(.text.xTimerCreateTimerTask)
    __hardfp_log                             0x00004899   Thumb Code   872  log.o(i.__hardfp_log)
    __hardfp_log10                           0x00004c61   Thumb Code   260  log10.o(i.__hardfp_log10)
    __kernel_poly                            0x00004d91   Thumb Code   248  poly.o(i.__kernel_poly)
    __mathlib_dbl_divzero                    0x00004e89   Thumb Code    28  dunder.o(i.__mathlib_dbl_divzero)
    __mathlib_dbl_infnan                     0x00004eb9   Thumb Code    20  dunder.o(i.__mathlib_dbl_infnan)
    __mathlib_dbl_invalid                    0x00004ed1   Thumb Code    24  dunder.o(i.__mathlib_dbl_invalid)
    log                                      0x00004ef1   Thumb Code    16  log.o(i.log)
    __aeabi_dneg                             0x00004f01   Thumb Code     0  basic.o(x$fpl$basic)
    _dneg                                    0x00004f01   Thumb Code     6  basic.o(x$fpl$basic)
    __aeabi_fneg                             0x00004f07   Thumb Code     0  basic.o(x$fpl$basic)
    _fneg                                    0x00004f07   Thumb Code     6  basic.o(x$fpl$basic)
    _dabs                                    0x00004f0d   Thumb Code     6  basic.o(x$fpl$basic)
    _fabs                                    0x00004f13   Thumb Code     6  basic.o(x$fpl$basic)
    __aeabi_dadd                             0x00004f19   Thumb Code     0  daddsub_clz.o(x$fpl$dadd)
    _dadd                                    0x00004f19   Thumb Code   332  daddsub_clz.o(x$fpl$dadd)
    __fpl_dcmp_Inf                           0x00005069   Thumb Code    24  dcmpi.o(x$fpl$dcmpinf)
    __aeabi_ddiv                             0x00005081   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    _ddiv                                    0x00005081   Thumb Code   556  ddiv.o(x$fpl$ddiv)
    __aeabi_cdcmpeq                          0x00005335   Thumb Code     0  deqf.o(x$fpl$deqf)
    _dcmpeq                                  0x00005335   Thumb Code   120  deqf.o(x$fpl$deqf)
    __aeabi_d2iz                             0x000053ad   Thumb Code     0  dfix.o(x$fpl$dfix)
    _dfix                                    0x000053ad   Thumb Code    94  dfix.o(x$fpl$dfix)
    __aeabi_i2d                              0x0000540b   Thumb Code     0  dflt_clz.o(x$fpl$dflt)
    _dflt                                    0x0000540b   Thumb Code    46  dflt_clz.o(x$fpl$dflt)
    __aeabi_ui2d                             0x00005439   Thumb Code     0  dflt_clz.o(x$fpl$dfltu)
    _dfltu                                   0x00005439   Thumb Code    38  dflt_clz.o(x$fpl$dfltu)
    __aeabi_dmul                             0x00005461   Thumb Code     0  dmul.o(x$fpl$dmul)
    _dmul                                    0x00005461   Thumb Code   332  dmul.o(x$fpl$dmul)
    __fpl_dnaninf                            0x000055b5   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    __fpl_dretinf                            0x00005651   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    __aeabi_drsub                            0x0000565d   Thumb Code     0  daddsub_clz.o(x$fpl$drsb)
    _drsb                                    0x0000565d   Thumb Code    22  daddsub_clz.o(x$fpl$drsb)
    __aeabi_dsub                             0x00005675   Thumb Code     0  daddsub_clz.o(x$fpl$dsub)
    _dsub                                    0x00005675   Thumb Code   472  daddsub_clz.o(x$fpl$dsub)
    _fp_init                                 0x00005851   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x00005869   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00005869   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __I$use$fp                               0x0000586a   Number         0  usenofp.o(x$fpl$usenofp)
    __mathlib_zero                           0x000058a8   Data           8  qnan.o(.constdata)
    uxTopUsedPriority                        0x00005b14   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00005b18   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00005b38   Number         0  anon$$obj.o(Region$$Table)
    Level                                    0x20000000   Data           4  game.o(.data.Level)
    SystemCoreClock                          0x20000004   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    _random_number_data                      0x20000010   Data         228  rand.o(.bss)
    __libspace_start                         0x200000f4   Data          96  libspace.o(.bss)
    LevelUpCheck                             0x20000154   Data           4  game.o(.bss.LevelUpCheck)
    __temporary_stack_top$libspace           0x20000154   Data           0  libspace.o(.bss)
    comX                                     0x20000158   Data           4  game.o(.bss.comX)
    comY                                     0x2000015c   Data           4  game.o(.bss.comY)
    cont                                     0x20000160   Data           4  game.o(.bss.cont)
    gameOver                                 0x20000164   Data           4  game.o(.bss.gameOver)
    incX                                     0x20000168   Data           4  game.o(.bss.incX)
    incY                                     0x2000016c   Data           4  game.o(.bss.incY)
    lost                                     0x20000170   Data           4  game.o(.bss.lost)
    prevScore                                0x20000194   Data           4  game.o(.bss.prevScore)
    pxCurrentTCB                             0x200001a0   Data           4  tasks.o(.bss.pxCurrentTCB)
    record                                   0x20000218   Data           4  game.o(.bss.record)
    score                                    0x2000021c   Data           4  game.o(.bss.score)
    start                                    0x20000220   Data           4  game.o(.bss.start)
    tailLength                               0x20000224   Data           4  game.o(.bss.tailLength)
    tailX                                    0x20000228   Data        1596  game.o(.bss.tailX)
    tailY                                    0x20000864   Data        1596  game.o(.bss.tailY)
    wallCollision                            0x200036c4   Data           4  game.o(.bss.wallCollision)
    xBinarySemaphore                         0x200036f0   Data           4  main.o(.bss.xBinarySemaphore)
    x_HeadPosition                           0x20003784   Data           4  game.o(.bss.x_HeadPosition)
    y_HeadPosition                           0x20003788   Data           4  game.o(.bss.y_HeadPosition)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000345

  Load Region LR_1 (Base: 0x00000000, Size: 0x00005b44, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00005b38, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          102    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO          634  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO          871    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000001a   Code   RO          873    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002c2   0x000002c2   0x00000002   PAD
    0x000002c4   0x000002c4   0x0000001c   Code   RO          875    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002e0   0x000002e0   0x00000002   Code   RO          789    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002e2   0x000002e2   0x00000004   Code   RO          663    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          666    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          668    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          671    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          673    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000004   Code   RO          674    .ARM.Collect$$libinit$$0000000F  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          675    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          678    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          680    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          682    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          684    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          686    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          688    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          690    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          692    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          694    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          696    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          698    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          702    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          704    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          706    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          708    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x000002ea   0x000002ea   0x00000002   Code   RO          709    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x000002ec   0x000002ec   0x00000002   Code   RO          830    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x000002ee   0x000002ee   0x00000000   Code   RO          838    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x000002ee   0x000002ee   0x00000000   Code   RO          840    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x000002ee   0x000002ee   0x00000000   Code   RO          843    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x000002ee   0x000002ee   0x00000000   Code   RO          846    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x000002ee   0x000002ee   0x00000000   Code   RO          848    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x000002ee   0x000002ee   0x00000000   Code   RO          851    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x000002ee   0x000002ee   0x00000002   Code   RO          852    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x000002f0   0x000002f0   0x00000000   Code   RO          658    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x000002f0   0x000002f0   0x00000000   Code   RO          741    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x000002f0   0x000002f0   0x00000006   Code   RO          753    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          743    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000004   Code   RO          744    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x000002fa   0x000002fa   0x00000000   Code   RO          746    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x000002fa   0x000002fa   0x00000008   Code   RO          747    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x00000302   0x00000302   0x00000002   Code   RO          796    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000304   0x00000304   0x00000000   Code   RO          808    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000304   0x00000304   0x00000004   Code   RO          809    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000308   0x00000308   0x00000006   Code   RO          810    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000030e   0x0000030e   0x00000002   PAD
    0x00000310   0x00000310   0x00000034   Code   RO          615    .emb_text           c_w.l(rand.o)
    0x00000344   0x00000344   0x00000114   Code   RO          103  * .text               startup_tm4c123.o
    0x00000458   0x00000458   0x0000003c   Code   RO          616    .text               c_w.l(rand.o)
    0x00000494   0x00000494   0x0000003e   Code   RO          620    .text               c_w.l(strlen.o)
    0x000004d2   0x000004d2   0x0000008a   Code   RO          622    .text               c_w.l(rt_memcpy_v6.o)
    0x0000055c   0x0000055c   0x00000010   Code   RO          626    .text               c_w.l(aeabi_memset4.o)
    0x0000056c   0x0000056c   0x00000044   Code   RO          628    .text               c_w.l(rt_memclr.o)
    0x000005b0   0x000005b0   0x0000004e   Code   RO          630    .text               c_w.l(rt_memclr_w.o)
    0x000005fe   0x000005fe   0x00000006   Code   RO          632    .text               c_w.l(heapauxi.o)
    0x00000604   0x00000604   0x00000016   Code   RO          659    .text               c_w.l(_rserrno.o)
    0x0000061a   0x0000061a   0x00000064   Code   RO          661    .text               c_w.l(rt_memcpy_w.o)
    0x0000067e   0x0000067e   0x00000002   PAD
    0x00000680   0x00000680   0x00000008   Code   RO          758    .text               c_w.l(rt_errno_addr_intlibspace.o)
    0x00000688   0x00000688   0x00000008   Code   RO          773    .text               c_w.l(libspace.o)
    0x00000690   0x00000690   0x0000004a   Code   RO          776    .text               c_w.l(sys_stackheap_outer.o)
    0x000006da   0x000006da   0x00000012   Code   RO          778    .text               c_w.l(exit.o)
    0x000006ec   0x000006ec   0x00000002   Code   RO          804    .text               c_w.l(use_no_semi.o)
    0x000006ee   0x000006ee   0x00000000   Code   RO          806    .text               c_w.l(indicate_semi.o)
    0x000006ee   0x000006ee   0x00000002   PAD
    0x000006f0   0x000006f0   0x0000000c   Code   RO          820    .text               c_w.l(sys_exit.o)
    0x000006fc   0x000006fc   0x00000050   Code   RO           30    .text.PORTA_init    bsp.o
    0x0000074c   0x0000074c   0x00000048   Code   RO           32    .text.PORTF_init    bsp.o
    0x00000794   0x00000794   0x0000000c   PAD
    0x000007a0   0x000007a0   0x00000064   Code   RO          198    .text.PendSV_Handler  port.o
    0x00000804   0x00000804   0x0000000c   PAD
    0x00000810   0x00000810   0x00000024   Code   RO          182    .text.SVC_Handler   port.o
    0x00000834   0x00000834   0x0000003c   Code   RO          200    .text.SysTick_Handler  port.o
    0x00000870   0x00000870   0x00000012   Code   RO          114    .text.SystemInit    system_tm4c123.o
    0x00000882   0x00000882   0x00000002   PAD
    0x00000884   0x00000884   0x0000004e   Code   RO            6    .text.UART0_Handler  main.o
    0x000008d2   0x000008d2   0x00000002   PAD
    0x000008d4   0x000008d4   0x000000a0   Code   RO           20    .text.UART_init     bsp.o
    0x00000974   0x00000974   0x00000030   Code   RO           24    .text.__NVIC_EnableIRQ  bsp.o
    0x000009a4   0x000009a4   0x00000042   Code   RO           22    .text.__NVIC_SetPriority  bsp.o
    0x000009e6   0x000009e6   0x00000002   PAD
    0x000009e8   0x000009e8   0x00000080   Code   RO          469    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x00000a68   0x00000a68   0x00000196   Code   RO           68    .text.input         game.o
    0x00000bfe   0x00000bfe   0x00000002   PAD
    0x00000c00   0x00000c00   0x00000314   Code   RO           70    .text.logic         game.o
    0x00000f14   0x00000f14   0x0000007c   Code   RO            8    .text.main          main.o
    0x00000f90   0x00000f90   0x000001b0   Code   RO           72    .text.mainloop      game.o
    0x00001140   0x00001140   0x00000200   Code   RO           66    .text.map_draw      game.o
    0x00001340   0x00001340   0x00000072   Code   RO           51    .text.my_itoa       uart.o
    0x000013b2   0x000013b2   0x00000002   PAD
    0x000013b4   0x000013b4   0x00000052   Code   RO           62    .text.newRecord     game.o
    0x00001406   0x00001406   0x00000002   PAD
    0x00001408   0x00001408   0x0000004c   Code   RO           43    .text.print         uart.o
    0x00001454   0x00001454   0x00000004   PAD
    0x00001458   0x00001458   0x00000100   Code   RO           45    .text.print_idec    uart.o
    0x00001558   0x00001558   0x00000122   Code   RO          391    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x0000167a   0x0000167a   0x00000002   PAD
    0x0000167c   0x0000167c   0x00000154   Code   RO          379    .text.prvAddNewTaskToReadyList  tasks.o
    0x000017d0   0x000017d0   0x0000006a   Code   RO          545    .text.prvCheckForValidListAndQueue  timers.o
    0x0000183a   0x0000183a   0x00000002   PAD
    0x0000183c   0x0000183c   0x0000005a   Code   RO          509    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00001896   0x00001896   0x00000002   PAD
    0x00001898   0x00001898   0x00000042   Code   RO          269    .text.prvCopyDataFromQueue  queue.o
    0x000018da   0x000018da   0x00000002   PAD
    0x000018dc   0x000018dc   0x000000cc   Code   RO          255    .text.prvCopyDataToQueue  queue.o
    0x000019a8   0x000019a8   0x00000018   Code   RO          385    .text.prvDeleteTCB  tasks.o
    0x000019c0   0x000019c0   0x00000026   Code   RO          275    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x000019e6   0x000019e6   0x00000002   PAD
    0x000019e8   0x000019e8   0x0000007c   Code   RO          511    .text.prvGetExpectedIdleTime  tasks.o
    0x00001a64   0x00001a64   0x00000040   Code   RO          583    .text.prvGetNextExpireTime  timers.o
    0x00001aa4   0x00001aa4   0x0000009a   Code   RO          417    .text.prvIdleTask   tasks.o
    0x00001b3e   0x00001b3e   0x00000002   PAD
    0x00001b40   0x00001b40   0x0000004e   Code   RO          241    .text.prvInitialiseNewQueue  queue.o
    0x00001b8e   0x00001b8e   0x00000002   PAD
    0x00001b90   0x00001b90   0x00000124   Code   RO          377    .text.prvInitialiseNewTask  tasks.o
    0x00001cb4   0x00001cb4   0x0000008e   Code   RO          507    .text.prvInitialiseTaskLists  tasks.o
    0x00001d42   0x00001d42   0x00000002   PAD
    0x00001d44   0x00001d44   0x00000086   Code   RO          597    .text.prvInsertTimerInActiveList  timers.o
    0x00001dca   0x00001dca   0x00000002   PAD
    0x00001dcc   0x00001dcc   0x00000028   Code   RO          271    .text.prvIsQueueEmpty  queue.o
    0x00001df4   0x00001df4   0x000000ec   Code   RO          257    .text.prvNotifyQueueSetContainer  queue.o
    0x00001ee0   0x00001ee0   0x00000028   Code   RO          190    .text.prvPortStartFirstTask  port.o
    0x00001f08   0x00001f08   0x00000054   Code   RO          591    .text.prvProcessExpiredTimer  timers.o
    0x00001f5c   0x00001f5c   0x00000180   Code   RO          587    .text.prvProcessReceivedCommands  timers.o
    0x000020dc   0x000020dc   0x0000009a   Code   RO          585    .text.prvProcessTimerOrBlockTask  timers.o
    0x00002176   0x00002176   0x00000002   PAD
    0x00002178   0x00002178   0x00000034   Code   RO          595    .text.prvReloadTimer  timers.o
    0x000021ac   0x000021ac   0x0000003c   Code   RO          383    .text.prvResetNextTaskUnblockTime  tasks.o
    0x000021e8   0x000021e8   0x00000044   Code   RO          589    .text.prvSampleTimeNow  timers.o
    0x0000222c   0x0000222c   0x00000052   Code   RO          593    .text.prvSwitchTimerLists  timers.o
    0x0000227e   0x0000227e   0x00000002   PAD
    0x00002280   0x00002280   0x0000004c   Code   RO          180    .text.prvTaskExitError  port.o
    0x000022cc   0x000022cc   0x0000001e   Code   RO          547    .text.prvTimerTask  timers.o
    0x000022ea   0x000022ea   0x00000002   PAD
    0x000022ec   0x000022ec   0x000000cc   Code   RO          261    .text.prvUnlockQueue  queue.o
    0x000023b8   0x000023b8   0x000000c0   Code   RO          219    .text.pvPortMalloc  heap_1.o
    0x00002478   0x00002478   0x0000002c   Code   RO          491    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x000024a4   0x000024a4   0x0000005e   Code   RO          178    .text.pxPortInitialiseStack  port.o
    0x00002502   0x00002502   0x00000002   PAD
    0x00002504   0x00002504   0x00000132   Code   RO           64    .text.setUp         game.o
    0x00002636   0x00002636   0x00000002   PAD
    0x00002638   0x00002638   0x0000002e   Code   RO           28    .text.uart0_Receivechar  bsp.o
    0x00002666   0x00002666   0x00000002   PAD
    0x00002668   0x00002668   0x0000002e   Code   RO           26    .text.uart0_putchar  bsp.o
    0x00002696   0x00002696   0x00000002   PAD
    0x00002698   0x00002698   0x00000048   Code   RO          169    .text.uxListRemove  list.o
    0x000026e0   0x000026e0   0x0000000c   Code   RO          427    .text.uxTaskGetNumberOfTasks  tasks.o
    0x000026ec   0x000026ec   0x000000e2   Code   RO            4    .text.vGameTask     main.o
    0x000027ce   0x000027ce   0x00000002   PAD
    0x000027d0   0x000027d0   0x0000002e   Code   RO          161    .text.vListInitialise  list.o
    0x000027fe   0x000027fe   0x00000002   PAD
    0x00002800   0x00002800   0x0000000e   Code   RO          163    .text.vListInitialiseItem  list.o
    0x0000280e   0x0000280e   0x00000002   PAD
    0x00002810   0x00002810   0x0000006a   Code   RO          167    .text.vListInsert   list.o
    0x0000287a   0x0000287a   0x00000002   PAD
    0x0000287c   0x0000287c   0x0000003a   Code   RO          165    .text.vListInsertEnd  list.o
    0x000028b6   0x000028b6   0x00000002   PAD
    0x000028b8   0x000028b8   0x00000014   Code   RO          188    .text.vPortEnableVFP  port.o
    0x000028cc   0x000028cc   0x00000056   Code   RO          194    .text.vPortEnterCritical  port.o
    0x00002922   0x00002922   0x00000002   PAD
    0x00002924   0x00002924   0x0000004a   Code   RO          196    .text.vPortExitCritical  port.o
    0x0000296e   0x0000296e   0x00000002   PAD
    0x00002970   0x00002970   0x00000024   Code   RO          221    .text.vPortFree     heap_1.o
    0x00002994   0x00002994   0x00000078   Code   RO          186    .text.vPortSetupTimerInterrupt  port.o
    0x00002a0c   0x00002a0c   0x00000220   Code   RO          202    .text.vPortSuppressTicksAndSleep  port.o
    0x00002c2c   0x00002c2c   0x00000084   Code   RO          204    .text.vPortValidateInterruptPriority  port.o
    0x00002cb0   0x00002cb0   0x00000064   Code   RO          301    .text.vQueueWaitForMessageRestricted  queue.o
    0x00002d14   0x00002d14   0x0000006e   Code   RO          395    .text.vTaskDelay    tasks.o
    0x00002d82   0x00002d82   0x00000002   PAD
    0x00002d84   0x00002d84   0x00000154   Code   RO          381    .text.vTaskDelete   tasks.o
    0x00002ed8   0x00002ed8   0x00000024   Code   RO          459    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00002efc   0x00002efc   0x0000000e   Code   RO          463    .text.vTaskMissedYield  tasks.o
    0x00002f0a   0x00002f0a   0x00000002   PAD
    0x00002f0c   0x00002f0c   0x00000042   Code   RO          447    .text.vTaskPlaceOnEventList  tasks.o
    0x00002f4e   0x00002f4e   0x00000002   PAD
    0x00002f50   0x00002f50   0x0000007c   Code   RO          451    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x00002fcc   0x00002fcc   0x00000182   Code   RO          487    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x0000314e   0x0000314e   0x00000002   PAD
    0x00003150   0x00003150   0x000000b2   Code   RO          415    .text.vTaskStartScheduler  tasks.o
    0x00003202   0x00003202   0x00000002   PAD
    0x00003204   0x00003204   0x000000cc   Code   RO          441    .text.vTaskStepTick  tasks.o
    0x000032d0   0x000032d0   0x00000010   Code   RO          389    .text.vTaskSuspendAll  tasks.o
    0x000032e0   0x000032e0   0x000000be   Code   RO          407    .text.vTaskSwitchContext  tasks.o
    0x0000339e   0x0000339e   0x00000002   PAD
    0x000033a0   0x000033a0   0x0000004a   Code   RO            2    .text.vUserInputTask  main.o
    0x000033ea   0x000033ea   0x00000002   PAD
    0x000033ec   0x000033ec   0x0000017c   Code   RO          184    .text.xPortStartScheduler  port.o
    0x00003568   0x00003568   0x0000009a   Code   RO          239    .text.xQueueGenericCreate  queue.o
    0x00003602   0x00003602   0x00000002   PAD
    0x00003604   0x00003604   0x00000108   Code   RO          237    .text.xQueueGenericReset  queue.o
    0x0000370c   0x0000370c   0x00000182   Code   RO          265    .text.xQueueGiveFromISR  queue.o
    0x0000388e   0x0000388e   0x00000002   PAD
    0x00003890   0x00003890   0x000001dc   Code   RO          267    .text.xQueueReceive  queue.o
    0x00003a6c   0x00003a6c   0x00000210   Code   RO          273    .text.xQueueSemaphoreTake  queue.o
    0x00003c7c   0x00003c7c   0x000000fc   Code   RO          461    .text.xTaskCheckForTimeOut  tasks.o
    0x00003d78   0x00003d78   0x000000a0   Code   RO          375    .text.xTaskCreate   tasks.o
    0x00003e18   0x00003e18   0x00000116   Code   RO          387    .text.xTaskDelayUntil  tasks.o
    0x00003f2e   0x00003f2e   0x00000002   PAD
    0x00003f30   0x00003f30   0x00000038   Code   RO          481    .text.xTaskGetSchedulerState  tasks.o
    0x00003f68   0x00003f68   0x00000014   Code   RO          423    .text.xTaskGetTickCount  tasks.o
    0x00003f7c   0x00003f7c   0x00000260   Code   RO          421    .text.xTaskIncrementTick  tasks.o
    0x000041dc   0x000041dc   0x00000138   Code   RO          485    .text.xTaskPriorityDisinherit  tasks.o
    0x00004314   0x00004314   0x0000015c   Code   RO          483    .text.xTaskPriorityInherit  tasks.o
    0x00004470   0x00004470   0x00000192   Code   RO          453    .text.xTaskRemoveFromEventList  tasks.o
    0x00004602   0x00004602   0x00000002   PAD
    0x00004604   0x00004604   0x00000222   Code   RO          393    .text.xTaskResumeAll  tasks.o
    0x00004826   0x00004826   0x00000002   PAD
    0x00004828   0x00004828   0x0000006c   Code   RO          543    .text.xTimerCreateTimerTask  timers.o
    0x00004894   0x00004894   0x00000004   PAD
    0x00004898   0x00004898   0x000003c4   Code   RO          733    i.__hardfp_log      m_wm.l(log.o)
    0x00004c5c   0x00004c5c   0x00000004   PAD
    0x00004c60   0x00004c60   0x00000130   Code   RO          652    i.__hardfp_log10    m_wm.l(log10.o)
    0x00004d90   0x00004d90   0x000000f8   Code   RO          770    i.__kernel_poly     m_wm.l(poly.o)
    0x00004e88   0x00004e88   0x00000030   Code   RO          719    i.__mathlib_dbl_divzero  m_wm.l(dunder.o)
    0x00004eb8   0x00004eb8   0x00000014   Code   RO          720    i.__mathlib_dbl_infnan  m_wm.l(dunder.o)
    0x00004ecc   0x00004ecc   0x00000004   PAD
    0x00004ed0   0x00004ed0   0x00000020   Code   RO          722    i.__mathlib_dbl_invalid  m_wm.l(dunder.o)
    0x00004ef0   0x00004ef0   0x00000010   Code   RO          735    i.log               m_wm.l(log.o)
    0x00004f00   0x00004f00   0x00000018   Code   RO          710    x$fpl$basic         fz_wm.l(basic.o)
    0x00004f18   0x00004f18   0x00000150   Code   RO          636    x$fpl$dadd          fz_wm.l(daddsub_clz.o)
    0x00005068   0x00005068   0x00000018   Code   RO          790    x$fpl$dcmpinf       fz_wm.l(dcmpi.o)
    0x00005080   0x00005080   0x000002b4   Code   RO          763    x$fpl$ddiv          fz_wm.l(ddiv.o)
    0x00005334   0x00005334   0x00000078   Code   RO          766    x$fpl$deqf          fz_wm.l(deqf.o)
    0x000053ac   0x000053ac   0x0000005e   Code   RO          642    x$fpl$dfix          fz_wm.l(dfix.o)
    0x0000540a   0x0000540a   0x0000002e   Code   RO          647    x$fpl$dflt          fz_wm.l(dflt_clz.o)
    0x00005438   0x00005438   0x00000026   Code   RO          646    x$fpl$dfltu         fz_wm.l(dflt_clz.o)
    0x0000545e   0x0000545e   0x00000002   PAD
    0x00005460   0x00005460   0x00000154   Code   RO          712    x$fpl$dmul          fz_wm.l(dmul.o)
    0x000055b4   0x000055b4   0x0000009c   Code   RO          714    x$fpl$dnaninf       fz_wm.l(dnaninf.o)
    0x00005650   0x00005650   0x0000000c   Code   RO          716    x$fpl$dretinf       fz_wm.l(dretinf.o)
    0x0000565c   0x0000565c   0x00000016   Code   RO          637    x$fpl$drsb          fz_wm.l(daddsub_clz.o)
    0x00005672   0x00005672   0x00000002   PAD
    0x00005674   0x00005674   0x000001dc   Code   RO          638    x$fpl$dsub          fz_wm.l(daddsub_clz.o)
    0x00005850   0x00005850   0x0000001a   Code   RO          768    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x0000586a   0x0000586a   0x00000000   Code   RO          718    x$fpl$usenofp       fz_wm.l(usenofp.o)
    0x0000586a   0x0000586a   0x00000006   PAD
    0x00005870   0x00005870   0x00000038   Data   RO          736    .constdata          m_wm.l(log.o)
    0x000058a8   0x000058a8   0x00000008   Data   RO          772    .constdata          m_wm.l(qnan.o)
    0x000058b0   0x000058b0   0x000000e3   Data   RO           11    .rodata.str1.1      main.o
    0x00005993   0x00005993   0x0000001f   Data   RO           53    .rodata.str1.1      uart.o
    0x000059b2   0x000059b2   0x00000155   Data   RO           83    .rodata.str1.1      game.o
    0x00005b07   0x00005b07   0x00000005   Data   RO          529    .rodata.str1.1      tasks.o
    0x00005b0c   0x00005b0c   0x00000008   Data   RO          600    .rodata.str1.1      timers.o
    0x00005b14   0x00005b14   0x00000004   Data   RO          514    .rodata.uxTopUsedPriority  tasks.o
    0x00005b18   0x00005b18   0x00000020   Data   RO          870    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00005b38, Size: 0x0000000c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00005b38   0x00000004   Data   RW           76    .data.Level         game.o
    0x20000004   0x00005b3c   0x00000004   Data   RW          116    .data.SystemCoreClock  system_tm4c123.o
    0x20000008   0x00005b40   0x00000004   Data   RW          208    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000010, Load base: 0x00005b44, Size: 0x00003980, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000010        -       0x000000e4   Zero   RW          617    .bss                c_w.l(rand.o)
    0x200000f4        -       0x00000060   Zero   RW          774    .bss                c_w.l(libspace.o)
    0x20000154        -       0x00000004   Zero   RW           77    .bss.LevelUpCheck   game.o
    0x20000158        -       0x00000004   Zero   RW           88    .bss.comX           game.o
    0x2000015c        -       0x00000004   Zero   RW           89    .bss.comY           game.o
    0x20000160        -       0x00000004   Zero   RW           75    .bss.cont           game.o
    0x20000164        -       0x00000004   Zero   RW           80    .bss.gameOver       game.o
    0x20000168        -       0x00000004   Zero   RW           86    .bss.incX           game.o
    0x2000016c        -       0x00000004   Zero   RW           87    .bss.incY           game.o
    0x20000170        -       0x00000004   Zero   RW           78    .bss.lost           game.o
    0x20000174        -       0x0000001e   Zero   RW           54    .bss.my_itoa.buf    uart.o
    0x20000192   0x00005b44   0x00000002   PAD
    0x20000194        -       0x00000004   Zero   RW           79    .bss.prevScore      game.o
    0x20000198        -       0x00000004   Zero   RW          604    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x2000019c        -       0x00000004   Zero   RW          227    .bss.pvPortMalloc.pucAlignedHeap  heap_1.o
    0x200001a0        -       0x00000004   Zero   RW          513    .bss.pxCurrentTCB   tasks.o
    0x200001a4        -       0x00000004   Zero   RW          602    .bss.pxCurrentTimerList  timers.o
    0x200001a8        -       0x00000004   Zero   RW          524    .bss.pxDelayedTaskList  tasks.o
    0x200001ac        -       0x00000004   Zero   RW          525    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200001b0        -       0x00000004   Zero   RW          603    .bss.pxOverflowTimerList  timers.o
    0x200001b4        -       0x00000064   Zero   RW          515    .bss.pxReadyTasksLists  tasks.o
    0x20000218        -       0x00000004   Zero   RW           82    .bss.record         game.o
    0x2000021c        -       0x00000004   Zero   RW           81    .bss.score          game.o
    0x20000220        -       0x00000004   Zero   RW           74    .bss.start          game.o
    0x20000224        -       0x00000004   Zero   RW           90    .bss.tailLength     game.o
    0x20000228        -       0x0000063c   Zero   RW           92    .bss.tailX          game.o
    0x20000864        -       0x0000063c   Zero   RW           93    .bss.tailY          game.o
    0x20000ea0        -       0x00002800   Zero   RW          228    .bss.ucHeap         heap_1.o
    0x200036a0        -       0x00000001   Zero   RW          206    .bss.ucMaxSysCallPriority  port.o
    0x200036a1   0x00005b44   0x00000003   PAD
    0x200036a4        -       0x00000004   Zero   RW          207    .bss.ulMaxPRIGROUPValue  port.o
    0x200036a8        -       0x00000004   Zero   RW          211    .bss.ulStoppedTimerCompensation  port.o
    0x200036ac        -       0x00000004   Zero   RW          210    .bss.ulTimerCountsForOneTick  port.o
    0x200036b0        -       0x00000004   Zero   RW          520    .bss.uxCurrentNumberOfTasks  tasks.o
    0x200036b4        -       0x00000004   Zero   RW          519    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x200036b8        -       0x00000004   Zero   RW          522    .bss.uxSchedulerSuspended  tasks.o
    0x200036bc        -       0x00000004   Zero   RW          517    .bss.uxTaskNumber   tasks.o
    0x200036c0        -       0x00000004   Zero   RW          516    .bss.uxTopReadyPriority  tasks.o
    0x200036c4        -       0x00000004   Zero   RW           91    .bss.wallCollision  game.o
    0x200036c8        -       0x00000014   Zero   RW          605    .bss.xActiveTimerList1  timers.o
    0x200036dc        -       0x00000014   Zero   RW          606    .bss.xActiveTimerList2  timers.o
    0x200036f0        -       0x00000004   Zero   RW           10    .bss.xBinarySemaphore  main.o
    0x200036f4        -       0x00000014   Zero   RW          534    .bss.xDelayedTaskList1  tasks.o
    0x20003708        -       0x00000014   Zero   RW          535    .bss.xDelayedTaskList2  tasks.o
    0x2000371c        -       0x00000004   Zero   RW          530    .bss.xIdleTaskHandle  tasks.o
    0x20003720        -       0x00000004   Zero   RW          209    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x20003724        -       0x00000004   Zero   RW          229    .bss.xNextFreeByte  heap_1.o
    0x20003728        -       0x00000004   Zero   RW          531    .bss.xNextTaskUnblockTime  tasks.o
    0x2000372c        -       0x00000004   Zero   RW          533    .bss.xNumOfOverflows  tasks.o
    0x20003730        -       0x00000004   Zero   RW          532    .bss.xPendedTicks   tasks.o
    0x20003734        -       0x00000014   Zero   RW          528    .bss.xPendingReadyList  tasks.o
    0x20003748        -       0x00000004   Zero   RW          521    .bss.xSchedulerRunning  tasks.o
    0x2000374c        -       0x00000014   Zero   RW          526    .bss.xSuspendedTaskList  tasks.o
    0x20003760        -       0x00000014   Zero   RW          518    .bss.xTasksWaitingTermination  tasks.o
    0x20003774        -       0x00000004   Zero   RW          523    .bss.xTickCount     tasks.o
    0x20003778        -       0x00000004   Zero   RW          599    .bss.xTimerQueue    timers.o
    0x2000377c        -       0x00000004   Zero   RW          601    .bss.xTimerTaskHandle  timers.o
    0x20003780        -       0x00000004   Zero   RW          527    .bss.xYieldPending  tasks.o
    0x20003784        -       0x00000004   Zero   RW           84    .bss.x_HeadPosition  game.o
    0x20003788        -       0x00000004   Zero   RW           85    .bss.y_HeadPosition  game.o
    0x2000378c   0x00005b44   0x00000004   PAD
    0x20003790        -       0x00000000   Zero   RW          101    HEAP                startup_tm4c123.o
    0x20003790        -       0x00000200   Zero   RW          100    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       518          0          0          0          0       9678   bsp.o
      2526         26        341          4       3256       2793   game.o
       228          0          0          0      10248       1775   heap_1.o
       296          0          0          0          0       2329   list.o
       502          0        227          0          4       3006   main.o
      1762         16          0          4         17       4998   port.o
      2774          0          0          0          0      16395   queue.o
       276         24        620          0        512       5480   startup_tm4c123.o
        18          0          0          4          0       6622   system_tm4c123.o
      6346          0          9          0        260      27275   tasks.o
      1266         10          8          0         60       9560   timers.o
       446         16         31          0         30       1877   uart.o

    ----------------------------------------------------------------------
     17072        104       1268         12      14396      91788   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       114         12          0          0          9          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        22          0          0          0          0        100   _rserrno.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
        10          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       112         18          0          0        228        160   rand.o
         8          4          0          0          0         68   rt_errno_addr_intlibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        62          0          0          0          0         76   strlen.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        24          0          0          0          0        164   basic.o
       834         16          0          0          0        516   daddsub_clz.o
        24          0          0          0          0        116   dcmpi.o
       692        140          0          0          0        264   ddiv.o
       120          4          0          0          0        140   deqf.o
        94          4          0          0          0        140   dfix.o
        84          0          0          0          0        232   dflt_clz.o
       340         12          0          0          0        152   dmul.o
       156          4          0          0          0        140   dnaninf.o
        12          0          0          0          0        116   dretinf.o
        26          0          0          0          0        116   fpinit.o
         0          0          0          0          0          0   usenofp.o
       100         28          0          0          0        372   dunder.o
       980         92         56          0          0        440   log.o
       304         44          0          0          0        200   log10.o
       248          0          0          0          0        152   poly.o
         0          0          8          0          0          0   qnan.o

    ----------------------------------------------------------------------
      4948        386         64          0        324       4612   Library Totals
        26          4          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       884         38          0          0        324       1352   c_w.l
      2406        180          0          0          0       2096   fz_wm.l
      1632        164         64          0          0       1164   m_wm.l

    ----------------------------------------------------------------------
      4948        386         64          0        324       4612   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     22020        490       1332         12      14720      93624   Grand Totals
     22020        490       1332         12      14720      93624   ELF Image Totals
     22020        490       1332         12          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                23352 (  22.80kB)
    Total RW  Size (RW Data + ZI Data)             14732 (  14.39kB)
    Total ROM Size (Code + RO Data + RW Data)      23364 (  22.82kB)

==============================================================================

